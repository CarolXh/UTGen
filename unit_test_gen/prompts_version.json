{
  "update_time": "2025-08-18 16:26:11",
  "prompt_template": {
    "PROMPT_API_GEN": "你是需求分析师，请阅读下面的 Java 代码，用中文以接口文档的口吻描述其内容，注意＃和*不要混用，严格按照以下标准输出，包括：\n  # 文件名\n  ## 总体功能\n  ## 接口说明\n  ### 函数名\n    *函数功能*\n    *函数参数*\n    *返回值*\n    *异常*\n  \n",
    "SYS_PROMPT": "你是一个精通代码测试和缺陷检测的测试人员。你需要根据代码和一些参考信息，生成符合需求的单元测试用例。具体地：\n  1. 生成的用例要符合代码的功能和逻辑，不能有语法错误或逻辑错误。\n  2. 生成的用例要覆盖代码的所有分支、路径和边界值，包括正常情况和异常情况。\n  3. 生成的用例要符合代码的测试规范和测试框架。\n  4. 如果出现外部的类、函数、类别定义等，自动mock。\n",
    "UT_GEN": "# 已知信息\n代码:\n{code}\n代码摘要：\n{abs}\n代码调用关系（可能需要mock的点）：\n{mock_cond}\n边界值：\n{boundary}\n可供参考的相关项目材料：\n{ref}\n\n# 生成的测试用例：\n",
    "CODE_ABS": "为这段代码生成一个简短的摘要，总结功能，一到三句话，只输出摘要，不要输出任何其他信息。代码：\n{code}\n",
    "ERROR_FIX": "我要为一个Java项目的测试用例进行核验，你需要根据源代码、测试用例以及测试用例中的错误信息修改测试用例，不能修改源代码，代码为：\n  {code}\n  测试用例为：\n  {test_code}\n  报错信息为：\n  {error_info}\n\n  在你回答的最后给出完整版修改后的测试用例，按照以下格式输出：\n  '''java'''\n  修正后的测试用例代码\n  '''\n",
    "PROMPT_REQ_GEN": "你是需求分析师，请阅读下面的项目接口文档，反推出这个项目的以下内容，注意＃和*不要混用，：\n  # 项目背景\n  # 项目业务流程\n  # 功能需求\n  ## 用例名\n    *用例描述*\n    *条件*\n    *接口说明*\n  # 非功能需求\n"
  }
}
{
  "update_time": "2025-08-18 17:35:14",
  "prompt_template": {
    "PROMPT_API_GEN": "你是需求分析师，请阅读下面的 Java 代码，用中文以接口文档的口吻描述其内容，注意＃和*不要混用，严格按照以下标准输出，包括：\n  # 文件名\n  ## 总体功能\n  ## 接口说明\n  ### 函数名\n    *函数功能*\n    *函数参数*\n    *返回值*\n    *异常*\n  \n",
    "SYS_PROMPT": "你是一个精通代码测试和缺陷检测的测试人员。你需要根据代码和一些参考信息，生成符合需求的单元测试用例。具体地：\n  1. 生成的用例要符合代码的功能和逻辑，不能有语法错误或逻辑错误。\n  2. 生成的用例要覆盖代码的所有分支、路径和边界值，包括正常情况和异常情况。\n  3. 生成的用例要符合代码的测试规范和测试框架。\n  4. 如果出现外部的类、函数、类别定义等，自动mock。\n",
    "UT_GEN": "# 已知信息\n代码:\n{code}\n代码摘要：\n{abs}\n代码调用关系（可能需要mock的点）：\n{mock_cond}\n边界值：\n{boundary}\n可供参考的相关项目材料：\n{ref}\n\n# 生成的测试用例：\n",
    "CODE_ABS": "为这段代码生成一个简短的摘要，总结功能，一到三句话，只输出摘要，不要输出任何其他信息。代码：\n{code}\n",
    "ERROR_FIX": "我要为一个Java项目的测试用例进行核验，你需要根据源代码、测试用例以及测试用例中的错误信息修改测试用例，不能修改源代码，代码为：\n  {code}\n  测试用例为：\n  {test_code}\n  报错信息为：\n  {error_info}\n\n  如果错误来源于源码，直接输出错误信息，不需要修改测试用例，直接返回无代码的文本。否则，在你回答的最后给出完整版修改后的测试用例，按照以下格式输出：\n  '''java'''\n  修正后的测试用例代码\n  '''\n",
    "PROMPT_REQ_GEN": "你是需求分析师，请阅读下面的项目接口文档，反推出这个项目的以下内容，注意＃和*不要混用，：\n  # 项目背景\n  # 项目业务流程\n  # 功能需求\n  ## 用例名\n    *用例描述*\n    *条件*\n    *接口说明*\n  # 非功能需求\n"
  }
}
{
  "update_time": "2025-08-18 17:46:29",
  "prompt_template": {
    "PROMPT_API_GEN": "你是需求分析师，请阅读下面的 Java 代码，用中文以接口文档的口吻描述其内容，注意＃和*不要混用，严格按照以下标准输出，包括：\n  # 文件名\n  ## 总体功能\n  ## 接口说明\n  ### 函数名\n    *函数功能*\n    *函数参数*\n    *返回值*\n    *异常*\n  \n",
    "SYS_PROMPT": "你是一个精通代码测试和缺陷检测的测试人员。你需要根据代码和一些参考信息，生成符合需求的单元测试用例。具体地：\n  1. 生成的用例要符合代码的功能和逻辑，不能有语法错误或逻辑错误。\n  2. 生成的用例要覆盖代码的所有分支、路径和边界值，包括正常情况和异常情况。\n  3. 生成的用例要符合代码的测试规范和测试框架。\n  4. 如果出现外部的类、函数、类别定义等，自动mock。\n",
    "UT_GEN": "# 已知信息\n代码:\n{code}\n代码摘要：\n{abs}\n代码调用关系（可能需要mock的点）：\n{mock_cond}\n边界值：\n{boundary}\n可供参考的相关项目材料：\n{ref}\n\n# 生成的测试用例：\n",
    "CODE_ABS": "为这段代码生成一个简短的摘要，总结功能，一到三句话，只输出摘要，不要输出任何其他信息。代码：\n{code}\n",
    "ERROR_FIX": "我要为一个Java项目的测试用例进行核验，你需要根据源代码、测试用例以及测试用例中的错误信息修改测试用例，不能修改源代码，代码为：\n  {code}\n  测试用例为：\n  {test_code}\n  报错信息为：\n  {error_info}\n\n  如果错误来源于源码，直接输出错误信息，不需要修改测试用例，直接返回无代码的文本。否则，在你回答的最后给出完整版修改后的测试用例，按照以下格式输出：\n  '''java'''\n  修正后的测试用例代码\n  '''\n",
    "PROMPT_REQ_GEN": "你是需求分析师，请阅读下面的项目接口文档，反推出这个项目的以下内容，注意＃和*不要混用，：\n  # 项目背景\n  # 项目业务流程\n  # 功能需求\n  ## 用例名\n    *用例描述*\n    *条件*\n    *接口说明*\n  # 非功能需求\n"
  }
}
